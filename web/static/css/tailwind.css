/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-100: oklch(93.6% 0.032 17.717);
    --color-red-200: oklch(88.5% 0.062 18.334);
    --color-red-300: oklch(80.8% 0.114 19.571);
    --color-red-400: oklch(70.4% 0.191 22.216);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-red-700: oklch(50.5% 0.213 27.518);
    --color-red-800: oklch(44.4% 0.177 26.899);
    --color-red-900: oklch(39.6% 0.141 25.723);
    --color-yellow-100: oklch(97.3% 0.071 103.193);
    --color-yellow-200: oklch(94.5% 0.129 101.54);
    --color-yellow-300: oklch(90.5% 0.182 98.111);
    --color-yellow-700: oklch(55.4% 0.135 66.442);
    --color-yellow-800: oklch(47.6% 0.114 61.907);
    --color-yellow-900: oklch(42.1% 0.095 57.708);
    --color-green-100: oklch(96.2% 0.044 156.743);
    --color-green-200: oklch(92.5% 0.084 155.995);
    --color-green-300: oklch(87.1% 0.15 154.449);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-green-700: oklch(52.7% 0.154 150.069);
    --color-green-800: oklch(44.8% 0.119 151.328);
    --color-green-900: oklch(39.3% 0.095 152.535);
    --color-blue-100: oklch(93.2% 0.032 255.585);
    --color-blue-200: oklch(88.2% 0.059 254.128);
    --color-blue-300: oklch(80.9% 0.105 251.813);
    --color-blue-400: oklch(70.7% 0.165 254.624);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-blue-700: oklch(48.8% 0.243 264.376);
    --color-blue-800: oklch(42.4% 0.199 265.638);
    --color-blue-900: oklch(37.9% 0.146 265.522);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-neutral-50: oklch(98.5% 0 0);
    --color-neutral-100: oklch(97% 0 0);
    --color-neutral-200: oklch(92.2% 0 0);
    --color-neutral-300: oklch(87% 0 0);
    --color-neutral-400: oklch(70.8% 0 0);
    --color-neutral-500: oklch(55.6% 0 0);
    --color-neutral-600: oklch(43.9% 0 0);
    --color-neutral-700: oklch(37.1% 0 0);
    --color-neutral-800: oklch(26.9% 0 0);
    --color-neutral-900: oklch(20.5% 0 0);
    --color-neutral-950: oklch(14.5% 0 0);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-xs: 20rem;
    --container-4xl: 56rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --font-weight-medium: 500;
    --font-weight-bold: 700;
    --tracking-wider: 0.05em;
    --leading-relaxed: 1.625;
    --radius-xs: 0.125rem;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-2xl: 1rem;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .collapse {
    visibility: collapse;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-4 {
    top: calc(var(--spacing) * 4);
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .right-4 {
    right: calc(var(--spacing) * 4);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .z-50 {
    z-index: 50;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .m-4 {
    margin: calc(var(--spacing) * 4);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mr-1 {
    margin-right: calc(var(--spacing) * 1);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .ml-4 {
    margin-left: calc(var(--spacing) * 4);
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .table {
    display: table;
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-full {
    height: 100%;
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-full {
    width: 100%;
  }
  .w-px {
    width: 1px;
  }
  .max-w-4xl {
    max-width: var(--container-4xl);
  }
  .max-w-xs {
    max-width: var(--container-xs);
  }
  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }
  .flex-1 {
    flex: 1;
  }
  .flex-shrink {
    flex-shrink: 1;
  }
  .flex-shrink-0 {
    flex-shrink: 0;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .grow {
    flex-grow: 1;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .cursor-default {
    cursor: default;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .space-y-1 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-x-1 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .overflow-auto {
    overflow: auto;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .scroll-smooth {
    scroll-behavior: smooth;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-t-sm {
    border-top-left-radius: var(--radius-sm);
    border-top-right-radius: var(--radius-sm);
  }
  .rounded-tr-sm {
    border-top-right-radius: var(--radius-sm);
  }
  .rounded-b-sm {
    border-bottom-right-radius: var(--radius-sm);
    border-bottom-left-radius: var(--radius-sm);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }
  .bg-green-200 {
    background-color: var(--color-green-200);
  }
  .bg-neutral-100 {
    background-color: var(--color-neutral-100);
  }
  .bg-neutral-200 {
    background-color: var(--color-neutral-200);
  }
  .bg-neutral-400 {
    background-color: var(--color-neutral-400);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .fill-current {
    fill: currentcolor;
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .text-center {
    text-align: center;
  }
  .text-left {
    text-align: left;
  }
  .font-sans {
    font-family: var(--font-sans);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .tracking-wider {
    --tw-tracking: var(--tracking-wider);
    letter-spacing: var(--tracking-wider);
  }
  .text-blue-600 {
    color: var(--color-blue-600);
  }
  .text-gray-400 {
    color: var(--color-gray-400);
  }
  .text-gray-700 {
    color: var(--color-gray-700);
  }
  .text-gray-900 {
    color: var(--color-gray-900);
  }
  .text-green-500 {
    color: var(--color-green-500);
  }
  .text-green-700 {
    color: var(--color-green-700);
  }
  .text-neutral-500 {
    color: var(--color-neutral-500);
  }
  .text-neutral-700 {
    color: var(--color-neutral-700);
  }
  .text-neutral-900 {
    color: var(--color-neutral-900);
  }
  .text-red-400 {
    color: var(--color-red-400);
  }
  .text-red-600 {
    color: var(--color-red-600);
  }
  .text-white {
    color: var(--color-white);
  }
  .uppercase {
    text-transform: uppercase;
  }
  .underline {
    text-decoration-line: underline;
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-150 {
    --tw-duration: 150ms;
    transition-duration: 150ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .group-open\:rotate-180 {
    &:is(:where(.group):is([open], :popover-open, :open) *) {
      rotate: 180deg;
    }
  }
  .hover\:bg-blue-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-700);
      }
    }
  }
  .hover\:bg-neutral-50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-50);
      }
    }
  }
  .hover\:bg-neutral-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-200);
      }
    }
  }
  .hover\:text-blue-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-600);
      }
    }
  }
  .hover\:text-gray-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-900);
      }
    }
  }
  .focus\:bg-white {
    &:focus {
      background-color: var(--color-white);
    }
  }
  .focus\:ring-2 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-blue-600 {
    &:focus {
      --tw-ring-color: var(--color-blue-600);
    }
  }
  .focus\:ring-red-600 {
    &:focus {
      --tw-ring-color: var(--color-red-600);
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .disabled\:opacity-50 {
    &:disabled {
      opacity: 50%;
    }
  }
  .sm\:inline {
    @media (width >= 40rem) {
      display: inline;
    }
  }
  .md\:w-64 {
    @media (width >= 48rem) {
      width: calc(var(--spacing) * 64);
    }
  }
  .md\:grid-cols-2 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .lg\:grid-cols-3 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .dark\:bg-black {
    &:is(.dark *) {
      background-color: var(--color-black);
    }
  }
  .dark\:bg-green-900 {
    &:is(.dark *) {
      background-color: var(--color-green-900);
    }
  }
  .dark\:bg-neutral-600 {
    &:is(.dark *) {
      background-color: var(--color-neutral-600);
    }
  }
  .dark\:bg-neutral-800 {
    &:is(.dark *) {
      background-color: var(--color-neutral-800);
    }
  }
  .dark\:bg-neutral-900 {
    &:is(.dark *) {
      background-color: var(--color-neutral-900);
    }
  }
  .dark\:text-blue-400 {
    &:is(.dark *) {
      color: var(--color-blue-400);
    }
  }
  .dark\:text-green-300 {
    &:is(.dark *) {
      color: var(--color-green-300);
    }
  }
  .dark\:text-neutral-100 {
    &:is(.dark *) {
      color: var(--color-neutral-100);
    }
  }
  .dark\:text-neutral-300 {
    &:is(.dark *) {
      color: var(--color-neutral-300);
    }
  }
  .dark\:text-neutral-400 {
    &:is(.dark *) {
      color: var(--color-neutral-400);
    }
  }
  .dark\:text-neutral-500 {
    &:is(.dark *) {
      color: var(--color-neutral-500);
    }
  }
  .dark\:text-red-400 {
    &:is(.dark *) {
      color: var(--color-red-400);
    }
  }
  .dark\:hover\:bg-neutral-800 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-neutral-800);
        }
      }
    }
  }
  .dark\:hover\:bg-neutral-950 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-neutral-950);
        }
      }
    }
  }
  .dark\:hover\:text-blue-400 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-blue-400);
        }
      }
    }
  }
  .dark\:hover\:text-neutral-100 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-neutral-100);
        }
      }
    }
  }
  .dark\:hover\:text-red-400 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-red-400);
        }
      }
    }
  }
  .dark\:focus\:bg-black {
    &:is(.dark *) {
      &:focus {
        background-color: var(--color-black);
      }
    }
  }
  .dark\:focus\:ring-blue-400 {
    &:is(.dark *) {
      &:focus {
        --tw-ring-color: var(--color-blue-400);
      }
    }
  }
  .dark\:focus\:ring-red-400 {
    &:is(.dark *) {
      &:focus {
        --tw-ring-color: var(--color-red-400);
      }
    }
  }
}
[disabled] {
  opacity: 0.5 !important;
  cursor: not-allowed !important;
  pointer-events: none !important;
}
@layer base {
  :root {
    --bg-page: var(--color-white);
    --text-page: var(--color-black);
    --bg-surface-1: var(--color-neutral-50);
    --text-surface-1: var(--color-neutral-950);
    --bg-surface-2: var(--color-neutral-100);
    --text-surface-2: var(--color-neutral-900);
    --bg-primary: var(--color-blue-500);
    --bg-primary-hover: var(--color-blue-400);
    --bg-primary-active: var(--color-blue-600);
    --text-primary: var(--color-white);
    --bg-secondary: var(--color-neutral-200);
    --bg-secondary-hover: var(--color-neutral-100);
    --bg-secondary-active: var(--color-neutral-300);
    --text-secondary: var(--color-neutral-800);
    --bg-inverted: var(--color-black);
    --bg-inverted-hover: var(--color-neutral-900);
    --bg-inverted-active: var(--color-neutral-800);
    --text-inverted: var(--color-white);
    --bg-code: var(--color-black);
    --text-code: var(--color-white);
    --bg-error: var(--color-red-200);
    --bg-error-hover: var(--color-red-100);
    --bg-error-active: var(--color-red-300);
    --text-error: var(--color-red-800);
    --bg-warning: var(--color-yellow-200);
    --bg-warning-hover: var(--color-yellow-100);
    --bg-warning-active: var(--color-yellow-300);
    --text-warning: var(--color-yellow-800);
    --bg-success: var(--color-green-200);
    --bg-success-hover: var(--color-green-100);
    --bg-success-active: var(--color-green-300);
    --text-success: var(--color-green-800);
    --bg-info: var(--color-blue-200);
    --bg-info-hover: var(--color-blue-100);
    --bg-info-active: var(--color-blue-300);
    --text-info: var(--color-blue-800);
  }
  html.dark {
    --bg-page: var(--color-black);
    --text-page: var(--color-white);
    --bg-surface-1: var(--color-neutral-950);
    --text-surface-1: var(--color-neutral-50);
    --bg-surface-2: var(--color-neutral-900);
    --text-surface-2: var(--color-neutral-100);
    --bg-secondary: var(--color-neutral-800);
    --bg-secondary-hover: var(--color-neutral-700);
    --bg-secondary-active: var(--color-neutral-900);
    --text-secondary: var(--color-neutral-200);
    --bg-inverted: var(--color-white);
    --bg-inverted-hover: var(--color-neutral-100);
    --bg-inverted-active: var(--color-neutral-200);
    --text-inverted: var(--color-black);
    --bg-code: var(--color-white);
    --text-code: var(--color-black);
    --bg-error: var(--color-red-800);
    --bg-error-hover: var(--color-red-700);
    --bg-error-active: var(--color-red-900);
    --text-error: var(--color-red-200);
    --bg-warning: var(--color-yellow-800);
    --bg-warning-hover: var(--color-yellow-700);
    --bg-warning-active: var(--color-yellow-900);
    --text-warning: var(--color-yellow-200);
    --bg-success: var(--color-green-800);
    --bg-success-hover: var(--color-green-700);
    --bg-success-active: var(--color-green-900);
    --text-success: var(--color-green-200);
    --bg-info: var(--color-blue-800);
    --bg-info-hover: var(--color-blue-700);
    --bg-info-active: var(--color-blue-900);
    --text-info: var(--color-blue-200);
  }
  * {
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    outline: none;
  }
  pre, code, kbd, samp {
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    font-size: 0.95rem;
    background-color: var(--bg-code);
    color: var(--text-code);
  }
  pre {
    overflow: auto;
    border-radius: var(--radius-xs);
    padding: calc(var(--spacing) * 2);
  }
  body {
    background-color: var(--bg-page);
    color: var(--text-page);
  }
  label {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  h1 {
    font-size: var(--text-3xl);
  }
  h2 {
    font-size: var(--text-2xl);
  }
  h3 {
    font-size: var(--text-xl);
  }
  h4 {
    font-size: var(--text-lg);
  }
  h5 {
    font-size: var(--text-base);
  }
  h6 {
    font-size: var(--text-sm);
  }
  h1, h2, h3, h4, h5, h6 {
    margin-bottom: 1rem;
  }
  a {
    color: var(--color-blue-500);
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-400);
      }
    }
    &:active {
      color: var(--color-blue-600);
    }
    text-decoration: none;
  }
  ol {
    list-style-position: inside;
    list-style-type: decimal;
  }
  ul {
    list-style-position: inside;
    list-style-type: disc;
  }
  nav ul {
    list-style-type: none;
  }
  details {
    cursor: pointer;
  }
  summary {
    list-style: none;
  }
  summary::-webkit-details-marker {
    display: none;
  }
  table {
    width: 100%;
    border-collapse: collapse;
  }
  table > thead {
    text-align: left;
  }
  table th {
    background-color: var(--color-neutral-800);
    color: var(--color-neutral-200);
    &:is(.dark *) {
      background-color: var(--color-neutral-200);
    }
    &:is(.dark *) {
      color: var(--color-neutral-800);
    }
  }
  table tfoot td {
    background-color: var(--color-neutral-200);
    text-align: right;
    &:is(.dark *) {
      background-color: var(--color-neutral-800);
    }
  }
  table th, td {
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 1);
  }
  button {
    border-radius: var(--radius-xs);
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 1);
  }
  input[type="text"], input[type="date"], input[type="email"], input[type="number"], input[type="password"], textarea, select {
    width: 100%;
    border-radius: var(--radius-xs);
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 1);
    background-color: var(--color-neutral-100);
    color: var(--color-neutral-900);
    &:is(.dark *) {
      background-color: var(--color-neutral-900);
    }
    &:is(.dark *) {
      color: var(--color-neutral-100);
    }
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-50);
      }
    }
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-neutral-800);
        }
      }
    }
    &:focus {
      background-color: var(--color-white);
    }
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    &:focus {
      --tw-ring-color: var(--color-blue-500);
    }
    &:is(.dark *) {
      &:focus {
        background-color: var(--color-black);
      }
    }
    &:is(.dark *) {
      &:focus {
        --tw-ring-color: var(--color-blue-500);
      }
    }
  }
  input[type="checkbox"], input[type="radio"] {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
    border-radius: var(--radius-sm);
    background-color: var(--color-white);
    color: var(--color-blue-600);
    &:is(.dark *) {
      background-color: var(--color-neutral-900);
    }
    &:is(.dark *) {
      color: var(--color-blue-400);
    }
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-50);
      }
    }
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-neutral-950);
        }
      }
    }
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    &:focus {
      --tw-ring-color: var(--color-blue-500);
    }
  }
  input[type="radio"] {
    border-radius: calc(infinity * 1px);
  }
  input::placeholder, textarea::placeholder {
    color: var(--color-neutral-500);
    &:is(.dark *) {
      color: var(--color-neutral-500);
    }
  }
  input.error::placeholder, textarea.error::placeholder {
    color: var(--color-red-200);
    &:is(.dark *) {
      color: var(--color-red-800);
    }
  }
  input[type="file"]::-webkit-file-upload-button, input[type="file"]::file-selector-button {
    border-radius: var(--radius-xs);
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 1);
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-ring-color: var(--color-blue-500);
    background-color: var(--bg-primary);
    color: var(--text-primary);
  }
  input[type="file"]::-webkit-file-upload-button:focus, input[type="file"]::file-selector-button:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-ring-color: var(--color-blue-500);
  }
  textarea.resize-vertical {
    resize: vertical;
  }
  details > summary:focus, button:focus, [type="button"]:focus, [type="reset"]:focus, [type="submit"]:focus, a:focus {
    outline: none;
    outline-offset: 2px;
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    &:focus {
      --tw-ring-color: var(--color-blue-500);
    }
  }
}
@layer components {
  .comp-section {
    border-radius: var(--radius-xs);
    padding: calc(var(--spacing) * 2);
  }
  .surface-1 {
    background-color: var(--bg-surface-1);
    color: var(--text-surface-1);
  }
  .surface-2 {
    background-color: var(--bg-surface-2);
    color: var(--text-surface-2);
  }
  .primary {
    background-color: var(--bg-primary);
    color: var(--text-primary);
  }
  .primary:hover {
    background-color: var(--bg-primary-hover);
  }
  .primary:active {
    background-color: var(--bg-primary-active);
  }
  .secondary {
    background-color: var(--bg-secondary);
    color: var(--text-secondary);
  }
  .secondary:hover {
    background-color: var(--bg-secondary-hover);
  }
  .secondary:active {
    background-color: var(--bg-secondary-active);
  }
  .inverted {
    background-color: var(--bg-inverted);
    color: var(--text-inverted);
  }
  .inverted:hover {
    background-color: var(--bg-inverted-hover);
  }
  .inverted:active {
    background-color: var(--bg-inverted-active);
  }
  .info {
    background-color: var(--bg-info);
    color: var(--text-info);
  }
  .info:hover {
    background-color: var(--bg-info-hover);
  }
  .info:active {
    background-color: var(--bg-info-active);
  }
  .info::placeholder {
    color: var(--text-info);
  }
  .success {
    background-color: var(--bg-success);
    color: var(--text-success);
  }
  .success:hover {
    background-color: var(--bg-success-hover);
  }
  .success:active {
    background-color: var(--bg-success-active);
  }
  .success::placeholder {
    color: var(--text-success);
  }
  .warning {
    background-color: var(--bg-warning);
    color: var(--text-warning);
  }
  .warning:hover {
    background-color: var(--bg-warning-hover);
  }
  .warning:active {
    background-color: var(--bg-warning-active);
  }
  .warning::placeholder {
    color: var(--text-warning);
  }
  .error {
    background-color: var(--bg-error);
    color: var(--text-error);
  }
  .error:hover {
    background-color: var(--bg-error-hover);
  }
  .error:active {
    background-color: var(--bg-error-active);
  }
  .error::placeholder {
    color: var(--text-error);
  }
  .section {
    border-radius: var(--radius-xs);
    background-color: var(--color-neutral-100);
    padding: calc(var(--spacing) * 2);
    color: var(--color-neutral-800);
    &:is(.dark *) {
      background-color: var(--color-neutral-900);
    }
    &:is(.dark *) {
      color: var(--color-neutral-200);
    }
  }
  .card {
    border-radius: var(--radius-xs);
    background-color: var(--color-neutral-200);
    padding: calc(var(--spacing) * 2);
    color: var(--color-neutral-800);
    &:is(.dark *) {
      background-color: var(--color-neutral-800);
    }
    &:is(.dark *) {
      color: var(--color-neutral-200);
    }
  }
  .card-primary {
    border-radius: var(--radius-xs);
    background-color: var(--color-blue-500);
    padding: calc(var(--spacing) * 2);
    color: var(--color-white);
    &:is(.dark *) {
      background-color: var(--color-blue-500);
    }
    &:is(.dark *) {
      color: var(--color-white);
    }
  }
  .card-secondary {
    border-radius: var(--radius-xs);
    background-color: var(--color-neutral-200);
    padding: calc(var(--spacing) * 2);
    color: var(--color-neutral-800);
    &:is(.dark *) {
      background-color: var(--color-neutral-800);
    }
    &:is(.dark *) {
      color: var(--color-neutral-200);
    }
  }
  .card-inverted {
    border-radius: var(--radius-xs);
    background-color: var(--color-black);
    padding: calc(var(--spacing) * 2);
    color: var(--color-white);
    &:is(.dark *) {
      background-color: var(--color-white);
    }
    &:is(.dark *) {
      color: var(--color-black);
    }
  }
  .card-info {
    border-radius: var(--radius-xs);
    background-color: var(--color-blue-200);
    padding: calc(var(--spacing) * 2);
    color: var(--color-blue-800);
    &:is(.dark *) {
      background-color: var(--color-blue-800);
    }
    &:is(.dark *) {
      color: var(--color-blue-200);
    }
  }
  .card-success {
    border-radius: var(--radius-xs);
    background-color: var(--color-green-200);
    padding: calc(var(--spacing) * 2);
    color: var(--color-green-800);
    &:is(.dark *) {
      background-color: var(--color-green-800);
    }
    &:is(.dark *) {
      color: var(--color-green-200);
    }
  }
  .card-warning {
    border-radius: var(--radius-xs);
    background-color: var(--color-yellow-200);
    padding: calc(var(--spacing) * 2);
    color: var(--color-yellow-800);
    &:is(.dark *) {
      background-color: var(--color-yellow-800);
    }
    &:is(.dark *) {
      color: var(--color-yellow-200);
    }
  }
  .card-error {
    border-radius: var(--radius-xs);
    background-color: var(--color-red-200);
    padding: calc(var(--spacing) * 2);
    color: var(--color-red-800);
    &:is(.dark *) {
      background-color: var(--color-red-800);
    }
    &:is(.dark *) {
      color: var(--color-red-200);
    }
  }
  #messages {
    display: flex;
    flex-direction: column;
    gap: calc(var(--spacing) * 4);
  }
  .message {
    max-width: calc(3/4 * 100%);
    border-radius: var(--radius-2xl);
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 3);
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
    word-wrap: break-word;
  }
  .model-1 {
    align-self: flex-end;
    background-color: var(--color-neutral-100);
    color: var(--color-neutral-900);
    &:is(.dark *) {
      background-color: var(--color-neutral-800);
    }
    &:is(.dark *) {
      color: var(--color-neutral-200);
    }
  }
  .model-2 {
    align-self: flex-start;
    background-color: var(--color-neutral-200);
    color: var(--color-neutral-900);
    &:is(.dark *) {
      background-color: var(--color-neutral-700);
    }
    &:is(.dark *) {
      color: var(--color-neutral-100);
    }
  }
  .message summary {
    margin-bottom: calc(var(--spacing) * 2);
    cursor: pointer;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--color-gray-400);
    --tw-outline-style: none;
    outline-style: none;
  }
  .thinking-content {
    color: var(--color-neutral-500);
    font-style: italic;
  }
  .reply-content {
    white-space: pre-wrap;
  }
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-duration: initial;
      --tw-leading: initial;
    }
  }
}
